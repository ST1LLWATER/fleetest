// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://postgres:12345678@127.0.0.1:5432/test"
}

enum FleetStatus {
  Operational
  Maintenance
  Deployed
  InTransit
  Docked
  OnAlert
  StandDown
  Distressed
}

enum FleetType {
  AircraftCarrier
  Battleship
  Submarine
  Destroyer
  Cruiser
  Frigate
  Patrol
  Amphibious
}

enum Rank {
  Admiral
  ViceAdmiral
  RearAdmiral
  Captain
  Commander
  LieutenantCommander
  Lieutenant
  LieutenantJuniorGrade
  Ensign
  ChiefWarrantOfficer
  PettyOfficer
  Seaman
}

model Member {
  id       Int     @id @default(autoincrement())
  name     String
  email    String
  password String
  rank     Rank
  fleet_id Int?
  admin    Boolean @default(false)
  Fleet    Fleet?  @relation(fields: [fleet_id], references: [id])

  @@map("members")
}

model Fleet {
  id             Int             @id @default(autoincrement())
  name           String
  type           FleetType
  base_location  String
  openings       Int
  Members        Member[]
  Deployments    Deployment[]
  Announcements  Announcement[]
  FleetTrackings FleetTracking[]

  @@map("fleets")
}

model Deployment {
  id         Int       @id @default(autoincrement())
  fleet_id   Int
  location   String
  start_date DateTime
  end_date   DateTime?
  objective  String
  Fleet      Fleet     @relation(fields: [fleet_id], references: [id])

  @@map("deployments")
}

model Announcement {
  id       Int      @id @default(autoincrement())
  fleet_id Int
  date     DateTime
  message  String
  Fleet    Fleet    @relation(fields: [fleet_id], references: [id])

  @@map("announcements")
}

model FleetTracking {
  id        Int         @id @default(autoincrement())
  fleet_id  Int
  timestamp DateTime    @default(now())
  latitude  Float
  longitude Float
  status    FleetStatus
  Fleet     Fleet       @relation(fields: [fleet_id], references: [id])

  @@map("fleet_tracking")
}
